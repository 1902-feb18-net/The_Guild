
Across all Views: All nullable values should show something like N/A instead of blank spaces when null?

Users edit should only be accessible by that user logged in,
and should not display stats+salary if logged in user's role is not an adventurer.
Admin only should delete.

Need to be able to accept a request, with a way to set up the adventurer party when accepting.
This should automatically move request's progress from approved to accepted.
Alternatively, any can accept, adding themself to party, until one has manually changed the progress.

Request Create should automatically add the logged in user? (Already has requesting group selection.)
Request edit view/controller needs authorization checks. 
Request details should show requesting group and, if accepted or later progress, the adventurer party.

Still need a way to display user's Rank Requirements.
Still need Users rankup.

Add logic so that cannot update from later progress backwards (can only progress forward), <- added but didn't test
and customer can only update descript/requirements/reward when progress is pending, 
and receptionist can only update rank when progress is pending, and set progress to declined/approved,
and adventurer can only update their accepted requests' progress.

Setting/updating request's rank should auto update request's cost! (added but didn't test)

Need logic to prevent adding a rankrequirements if one for the current rank already exists. (added but didn't test)


Still need Angular GM stuff.

Dockerfile!


Non-MVP stuff:
Sort requests by progress or rank.
Sort users/adventurers by rank.
Need to be able to update request's party? 



Stuff to mention in project presentation:
Anything new?
Showed adding to db worked. Setting FK ID dependencies broke tests, realized had to call savechanges.
SonarCloud realized not using camelCase to name some classes. Left connection string after rescaffolding. 
Realized variable was declared and not being used when it should have been. Added title to views.
DevOps?

